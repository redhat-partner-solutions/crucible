---
- name: Set resource_id
  ansible.builtin.import_tasks:
    file: "./power_off.yml"

- name: Set ZT OneTimeBoot VirtualCD
  community.general.redfish_command:
    category: Systems
    command: SetOneTimeBoot
    bootdevice: Cd
    baseuri: "{{ bmc_address }}"
    username: "{{ bmc_user }}"
    password: "{{ bmc_password }}"

- name: Set resource_id
  ansible.builtin.import_tasks:
    file: "./set_resource_id.yml"

- block: # noqa unnamed-task
    - name: ZT Eject Virtual Media (if any)
      community.general.redfish_command:
        category: Manager
        command: VirtualMediaEject
        baseuri: "{{ bmc_address }}"
        username: "{{ bmc_user }}"
        password: "{{ bmc_password }}"
        virtual_media:
          image_url: "{{ boot_iso_url }}"
        resource_id: "{{ resource_id }}"
  rescue:
    - name: Get Virtual Media information
      community.general.redfish_info:
        category: Manager
        command: GetVirtualMedia
        baseuri: "{{ bmc_address }}"
        username: "{{ bmc_user }}"
        password: "{{ bmc_password }}"
      register: result

    - name: Get blocking virtual_media
      ansible.builtin.set_fact:
        blocking_virtual_media: "{{ result.redfish_facts.virtual_media.entries
            | flatten(levels=2)
            | selectattr('ConnectedVia', 'defined') | list
            | json_query('[?(
                (ConnectedVia == `URL` || ConnectedVia == `URI`)
                && Image != null
                && contains(MediaTypes, `CD`)
              )]'
            ) | from_yaml
          }}"

    - ansible.builtin.debug: # noqa unnamed-task
        var: blocking_virtual_media
        verbosity: 1

    - name: Attempting to eject blocking media
      community.general.redfish_command:
        category: Manager
        command: VirtualMediaEject
        baseuri: "{{ bmc_address }}"
        username: "{{ bmc_user }}"
        password: "{{ bmc_password }}"
        virtual_media:
          image_url: "{{ item.Image }}"
        resource_id: "{{ resource_id }}"
      loop: "{{ blocking_virtual_media }}"
      no_log: true

- name: ZT Insert Virtual Media
  community.general.redfish_command:
    category: Manager
    command: VirtualMediaInsert
    baseuri: "{{ bmc_address }}"
    username: "{{ bmc_user }}"
    password: "{{ bmc_password }}"
    virtual_media:
      image_url: '{{ boot_iso_url }}'
      media_types:
        - CD
        - DVD
    resource_id: "{{ resource_id }}"
    timeout: 120

- name: ZT Power on system
  community.general.redfish_command:
    category: Systems
    command: PowerOn
    baseuri: "{{ bmc_address }}"
    username: "{{ bmc_user }}"
    password: "{{ bmc_password }}"
