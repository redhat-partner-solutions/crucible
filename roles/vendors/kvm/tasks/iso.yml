---
#
# Virtual Redfish BMC
# https://docs.openstack.org/sushy-tools/latest/user/dynamic-emulator.html#uefi-boot
#

- name: Identify System Manager
  ansible.builtin.uri:
    url: "{{ base_bmc_address }}/redfish/v1/Systems/{{ vm_name }}"
    user: "{{ bmc_user }}"
    password: "{{ bmc_password }}"
    method: GET
    status_code: [200, 201]
    validate_certs: false
    return_content: true
  register: http_reply

- ansible.builtin.debug: # noqa unnamed-task
    msg: "{{ base_bmc_address }}/redfish/v1/Systems/{{ vm_name }}"
    verbosity: 1

- ansible.builtin.debug: # noqa unnamed-task
    var: http_reply
    verbosity: 1

- name: KVM Set System UUID
  ansible.builtin.set_fact:
    system_uuid_url: "{{ base_bmc_address }}/{{ http_reply.json['@odata.id'] }}"
    system_manager_url: "{{ base_bmc_address }}/{{ http_reply.json.Links.ManagedBy[0]['@odata.id'] }}"

- name: "KVM Force Power Off System {{ target_host }}"
  ansible.builtin.uri:
    url: "{{ system_uuid_url }}/Actions/ComputerSystem.Reset"
    user: "{{ bmc_user }}"
    password: "{{ bmc_password }}"
    method: POST
    body_format: json
    body: { "ResetType": "ForceOff" }
    status_code: [200, 204]
    force_basic_auth: true
    validate_certs: false
    return_content: true
  register: redfish_poweroff
  ignore_errors: true

- name: "KVM Eject Virtual Media (if any) {{ target_host }}"
  ansible.builtin.uri:
    url: "{{ system_manager_url }}/VirtualMedia/Cd/Actions/VirtualMedia.EjectMedia"
    user: "{{ bmc_user }}"
    password: "{{ bmc_password }}"
    method: POST
    body_format: json
    body: {}
    status_code: [200, 204]
    validate_certs: false
    return_content: true
  register: redfish_reply
  ignore_errors: true

- ansible.builtin.debug: # noqa unnamed-task
    var: redfish_reply
    verbosity: 1

- name: "KVM Insert Virtual Media {{ target_host }}"
  ansible.builtin.uri:
    url: "{{ system_manager_url }}/VirtualMedia/Cd/Actions/VirtualMedia.InsertMedia"
    user: "{{ bmc_user }}"
    password: "{{ bmc_password }}"
    method: POST
    body_format: json
    body: { "Image": "{{ boot_iso_url }}", "Inserted": true }
    status_code: [200, 204]
    force_basic_auth: true
    validate_certs: false
    return_content: true
    timeout: 90
  register: redfish_reply
  until: "redfish_reply.status == 204"
  retries: 20
  delay: 30

- ansible.builtin.debug: # noqa unnamed-task
    var: redfish_reply
    verbosity: 1

- name: "KVM Verify Virtual Media {{ target_host }}"
  ansible.builtin.uri:
    url: "{{ system_manager_url }}/VirtualMedia/Cd"
    user: "{{ bmc_user }}"
    password: "{{ bmc_password }}"
    method: GET
    status_code: [200, 201]
    validate_certs: false
    return_content: true
  register: redfish_reply
  when: ansible_verbosity >= 1

- ansible.builtin.debug: # noqa unnamed-task
    var: redfish_reply
    verbosity: 1

- name: "KVM Set OneTimeBoot Virtual Media {{ target_host }}"
  ansible.builtin.uri:
    url: "{{ system_uuid_url }}"
    user: "{{ bmc_user }}"
    password: "{{ bmc_password }}"
    method: PATCH
    body_format: json
    body:
      {
        "Boot":
          {
            "BootSourceOverrideTarget": "Cd",
            "BootSourceOverrideMode": "UEFI",
            "BootSourceOverrideEnabled": "Continuous",
          },
      }
    status_code: [200, 204]
    force_basic_auth: true
    validate_certs: false
    return_content: true
  register: redfish_reply

- ansible.builtin.debug: # noqa unnamed-task
    var: redfish_reply
    verbosity: 1

- name: "KVM Verify System Power State {{ target_host }}"
  ansible.builtin.uri:
    url: "{{ system_uuid_url }}"
    user: "{{ bmc_user }}"
    password: "{{ bmc_password }}"
    method: GET
    status_code: [200, 201]
    validate_certs: false
    return_content: true
  register: redfish_reply

- ansible.builtin.debug: # noqa unnamed-task
    var: redfish_reply
    verbosity: 1

- name: "KVM Force Restart System {{ target_host }}"
  ansible.builtin.uri:
    url: "{{ system_uuid_url }}/Actions/ComputerSystem.Reset"
    user: "{{ bmc_user }}"
    password: "{{ bmc_password }}"
    method: POST
    body_format: json
    body: { "ResetType": "ForceRestart" }
    status_code: [200, 204]
    force_basic_auth: true
    validate_certs: false
    return_content: true
  register: redfish_restart
  when: redfish_reply.json.PowerState == "On"

- name: "KVM Force Power On System {{ target_host }}"
  ansible.builtin.uri:
    url: "{{ system_uuid_url }}/Actions/ComputerSystem.Reset"
    user: "{{ bmc_user }}"
    password: "{{ bmc_password }}"
    method: POST
    body_format: json
    body: { "ResetType": "ForceOn" }
    status_code: [200, 204]
    force_basic_auth: true
    validate_certs: false
    return_content: true
  register: redfish_poweron
  when: redfish_reply.json.PowerState == "Off"
