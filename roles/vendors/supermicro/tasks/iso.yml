---
- name: Check boot iso is not in webroot
  ansible.builtin.assert:
    that:
      - boot_iso_url is match("https?://.+/.+/.+")
    fail_msg: "Boot iso should not be in webroot"

- name: SuperMicro Power ON
  community.general.redfish_command:
    category: Systems
    command: PowerOn
    baseuri: "{{ bmc_address }}"
    username: "{{ bmc_user }}"
    password: "{{ bmc_password }}"

- block: # noqa unnamed-task
    - ansible.builtin.import_tasks: ./virtual_media_mount_iso.yml # noqa unnamed-task

    - name: Set BootSourceOverrideTarget (UsbCd)
      ansible.builtin.set_fact:
        boot_source_override_target: UsbCd

  rescue:
    - ansible.builtin.import_tasks: ./iso_config_mount_iso.yml # noqa unnamed-task

    - name: Set BootSourceOverrideTarget (Cd)
      ansible.builtin.set_fact:
        boot_source_override_target: Cd


- name: Set Boot for the SuperMicro # noqa var-spacing # linter wrongly detects a var
  ansible.builtin.uri:
    url: "https://{{ bmc_address }}/redfish/v1/Systems/1"
    user: "{{ bmc_user }}"
    password: "{{ bmc_password }}"
    method: PATCH
    headers:
      content-type: application/json
      Accept: application/json
    body: '{"Boot":{"BootSourceOverrideEnabled":"Once","BootSourceOverrideTarget": "{{ boot_source_override_target }}"}}'
    body_format: json
    force_basic_auth: true
    validate_certs: false
    return_content: true

- name: Restart the SuperMicro
  ansible.builtin.uri:
    url: "https://{{ bmc_address }}/redfish/v1/Systems/1/Actions/ComputerSystem.Reset"
    user: "{{ bmc_user }}"
    password: "{{ bmc_password }}"
    method: POST
    headers:
      content-type: application/json
      Accept: application/json
    body: '{"ResetType": "ForceRestart"}'
    body_format: json
    force_basic_auth: true
    validate_certs: false
    return_content: true
