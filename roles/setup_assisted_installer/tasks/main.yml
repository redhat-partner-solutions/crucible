---
- name: Setup AI
  become: True
  block:
    - name: Open ports zone internal and public, for firewalld
      firewalld:
        port: "{{ item.1 }}/tcp"
        permanent: yes
        immediate: yes
        state: enabled
        zone: "{{ item.0 }}"
      loop: "{{ ['internal', 'public'] | product(['8000', '8090', '8080']) | list }}"

    - name: Create directories for assisted-installer
      file:
        path: "{{ item }}"
        mode: 0775
        state: directory
      with_items:
        - "{{ assisted_installer_dir }}"
        - "{{ assisted_installer_dir }}/data"
        - "{{ assisted_installer_dir }}/coreos_installer_data"

    - name: Create directory for assisted-installer database
      file:
        path: "{{ assisted_installer_dir }}/data/postgresql"
        mode: 0775
        state: directory
        recurse: true

    - name: Download the rhcos image
      get_url:
        url: "{{ rhcos_image }}"
        dest: "{{ assisted_installer_dir }}/{{ rhcos_image | basename }}"

    - name: Get coreos-installer via podman
      containers.podman.podman_container:
        name: coreos-installer
        rm: true
        detach: false
        volume:
          - "{{ assisted_installer_dir }}/coreos_installer_data/:/data:z"
        workdir: /data
        entrypoint: /bin/bash
        image: "{{ coreos_installer_image }}"
        command: ["-c", "cp /usr/sbin/coreos-installer /data/coreos-installer"]
        state: started

    - name: Move coreos-installer
      copy:
        src: "{{ assisted_installer_dir }}/coreos_installer_data/coreos-installer"
        dest: "{{ assisted_installer_dir }}/coreos-installer"
        mode: 0555
        remote_src: true

    - name: Template out assisted-installer files
      template:
        src: "{{ item.src }}"
        dest: "{{ item.dest }}"
        mode: 0644
      with_items:
        - src: onprem-environment.j2
          dest: "{{ assisted_installer_dir }}/onprem-environment"
        - src: nginx-ui.conf
          dest: "{{ assisted_installer_dir }}/nginx-ui.conf"

    - name: Create assisted-service pod
      containers.podman.podman_pod:
        name: assisted-service
        state: started
        network: "{{ podman_network | default(omit) }}"
        ports: "{{ ai_ports }}"

    - name: Create database container in assisted-service pod
      containers.podman.podman_container:
        pod: assisted-service
        env_file: "{{ assisted_installer_dir }}/onprem-environment"
        volume:
          - "{{ assisted_installer_dir }}/data/postgresql:/var/lib/pgsql:z"
        name: db
        image: "{{ assisted_postgres_image }}"
        state: started

    - name: Create assisted installer GUI container in assisted-service pod
      containers.podman.podman_container:
        pod: assisted-service
        env_file: "{{ assisted_installer_dir }}/onprem-environment"
        volume:
          - "{{ assisted_installer_dir }}/nginx-ui.conf:/opt/bitnami/nginx/conf/server_blocks/nginx.conf:z"
        name: gui
        image: "{{ assisted_service_gui_image }}"
        state: started

    - name: Create assisted installer service container in assisted-service pod
      containers.podman.podman_container:
        pod: assisted-service
        env_file: "{{ assisted_installer_dir }}/onprem-environment"
        volume:
          - "{{ assisted_installer_dir }}/{{ rhcos_image | basename }}:/data/livecd.iso:z"
          - "{{ assisted_installer_dir }}/coreos-installer:/data/coreos-installer:z"
        name: installer
        image: "{{ assisted_service_image }}"
        env:
          PULL_SECRET: "{{ PULL_SECRET }}"
          DUMMY_IGNITION: False
        state: started
      register: assisted_service_container_info

- name: Setup assisted_installer service
  become: true
  block:
    - name: Copy the systemd service file
      copy:
        content: |
          [Unit]
          Description=Podman assisted_installer.service
          [Service]
          Restart=on-failure
          ExecStart=/usr/bin/podman pod start assisted-service
          ExecStop=/usr/bin/podman pod stop -t 10 assisted-service
          KillMode=none
          Type=forking
          PIDFile={{ assisted_service_container_info.container.ConmonPidFile }}
          [Install]
          WantedBy=default.target
        dest: "/etc/systemd/system/assisted_installer.service"
        mode: 0644

    - name: Reload systemd service
      systemd:
        daemon_reexec: yes
        scope: system

    - name: Enable assisted_installer.service
      systemd:
        name: assisted_installer
        enabled: yes
        scope: system

    - name: Start assisted_installer.service
      systemd:
        name: assisted_installer
        state: started
        scope: system
