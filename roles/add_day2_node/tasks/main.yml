- name: "Install node: {{inventory_hostname }}"
  delegate_to: bastion
  block:
    - name: "Wait for 20 min until {{ inventory_hostname }} discovered"
      uri:
        url: "{{ URL_ASSISTED_INSTALLER_CLUSTER }}"
        method: GET
        status_code: [200, 201]
        return_content: True
      register: cluster
      until: (hostvars[inventory_hostname]['mac'] | upper) in (cluster.json.hosts | map(attribute='inventory') | map('from_json') | map(attribute='interfaces') | flatten | map(attribute='mac_address') | map('upper') | list)
      retries: 20
      delay: 60

    - name: Find host
      set_fact:
        discovered_host: "{{ item }}"
      when: (mac | upper) in ((item.inventory | from_json).interfaces | flatten | map(attribute='mac_address') | map('upper') | list )
      loop: "{{ cluster.json.hosts }}"
      no_log: True

    - debug: # noqa unnamed-task
        var: discovered_host
        verbosity: 1

    - name: "Wait for 20 min until {{ inventory_hostname }} to be ready"
      uri:
        url: "{{ URL_ASSISTED_INSTALLER_CLUSTER }}/hosts/{{ discovered_host.id }}"
        method: GET
        status_code: [200, 201]
        return_content: True
      register: discovered_host_reply
      until: discovered_host_reply.json.status in day2_states
      retries: 20
      delay: 60

    - name: Patch host
      import_role:
        name: patch_host_config
      vars:
        cluster_id: "{{ add_host_cluster_id }}"
        discovered_host: "{{ discovered_host_reply.json }}"
        inventory_nodes:
          - "{{ inventory_hostname }}"

    - name: "Refresh {{ inventory_hostname }} values"
      uri:
        url: "{{ URL_ASSISTED_INSTALLER_CLUSTER }}/hosts/{{ discovered_host.id }}"
        method: GET
        status_code: [200, 201]
        return_content: True
      register: discovered_host_reply

    - debug: # noqa unnamed-task
        var: discovered_host_reply.json
        verbosity: 1

    - name: Install cluster
      uri:
        url: "{{ URL_ASSISTED_INSTALLER_CLUSTER }}/actions/install_hosts"
        method: POST
        status_code: [202]
        return_content: True
        body_format: json
        body: {}
      register: http_reply
      when: discovered_host_reply.json.status in day2_host_found

    - name: Monitoring hosts installation
      import_role:
        name: monitor_host
      vars:
        ASSISTED_INSTALLER_BASE_URL: "{{ secure | ternary('https', 'http') }}://{{ hostvars['assisted_installer']['host'] }}:{{ hostvars['assisted_installer']['port'] }}/api/assisted-install/v1"
        CLUSTER_ID: "{{ add_host_cluster_id }}"
        waiting_termination_states:
          - "added-to-existing-cluster"
          - "installing-pending-user-action"
