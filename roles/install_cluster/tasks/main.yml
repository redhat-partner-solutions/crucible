---
# tasks file for install_cluster

- name: Get discovery ignition file
  uri:
    url: "{{ URL_ASSISTED_INSTALLER_CLUSTER }}/discovery-ignition"
    method: GET
    status_code: [200]
    return_content: True
  register: discovery_ignition

- debug:
    var: discovery_ignition.json
  when: debug | bool == True

- name: "Copy discovery_ignition.json"
  copy:
    content: "{{ discovery_ignition.json }}"
    dest: "{{ fetched_dest }}/discovery-ignition.txt"
    mode: 0644
  delegate_to: localhost
  become: no

# TODO: Validate cluster settings
- name: Count the hosts to be discovered
  set_fact:
    inventory_hosts: "{{ groups['masters'] | length + groups['workers'] | default([]) | length }}"

- name: Join list for workers and masters
  set_fact:
    nodes: "{{ groups['masters'] + groups['workers'] | default([]) }}"
    inventory_nodes: "{{ groups['masters'] + groups['workers'] | default([]) }}"

# Monitor hosts discovery
- name: Allow up to 20 minutes for all hosts to be discovered
  uri:
    url: "{{ URL_ASSISTED_INSTALLER_CLUSTER }}"
    method: GET
    status_code: [200, 201]
    return_content: True
  register: cluster
  until: ( cluster.json.hosts | length == inventory_nodes | length ) and ( cluster.json.status == "pending-for-input")
  retries: 20
  delay: 60
  when: install | bool == True

- name: Patch discovered hosts
  include_tasks: hosts_discovery.yml
  with_items:
    - "{{ cluster.json.hosts }}"
  loop_control:
    loop_var: discovered_host
  no_log: True

# Patch the cluster with the API Virtual IP
- name: Patch cluster with API Virtual IP
  uri:
    url: "{{ URL_ASSISTED_INSTALLER_CLUSTER }}"
    method: PATCH
    status_code: [201]
    return_content: True
    body_format: json
    body: {
        "vip_dhcp_allocation": "{{ VIP_DHCP_ALLOCATION | lower | bool }}",
        "ingress_vip": "{{ INGRESS_VIP }}",
        "api_vip": "{{ API_VIP }}"
    }
  when: install | bool == True
  register: http_reply

- debug:
    var: http_reply.json
  when: debug | bool == True

# Monitor cluster discovery
- name: Wait up to 20 minutes for the cluster to report as ready
  uri:
    url: "{{ URL_ASSISTED_INSTALLER_CLUSTER }}"
    method: GET
    status_code: [200, 201]
    return_content: True
  register: cluster
  until: "cluster.json.status == 'ready'"
  retries: 20
  delay: 60
  when: install | bool == True

# Install cluster
- name: Install cluster
  uri:
    url: "{{ URL_ASSISTED_INSTALLER_CLUSTER }}/actions/install"
    method: POST
    status_code: [202]
    return_content: True
    body_format: json
    body: { }
  when: install | bool == True
  register: http_reply

- name: Debug http_reply
  debug:
    var: http_reply.json
  when: debug | bool == True and install | bool == True


